import 'package:athena/core/errors/failures.dart';
import 'package:athena/features/study_materials/domain/entities/study_material_entity.dart';
import 'package:athena/features/study_materials/domain/repositories/study_material_repository.dart';
import 'package:athena/features/study_materials/domain/usecases/params/create_study_material_params.dart';
import 'package:dartz/dartz.dart';

class CreateStudyMaterialUseCase {
  final StudyMaterialRepository _repository;

  CreateStudyMaterialUseCase(this._repository);

  Future<Either<Failure, StudyMaterialEntity>> call(
    CreateStudyMaterialParams params,
  ) async {
    // Create domain entity from parameters
    final studyMaterial = StudyMaterialEntity(
      id: '', // Will be generated by the repository/database
      userId: params.userId,
      title: params.title.trim(),
      description: params.description?.trim(),
      subject: params.subject,
      contentType: params.contentType,
      originalContentText: params.originalContentText,
      fileStoragePath: params.fileStoragePath,
      ocrExtractedText: params.ocrExtractedText,
      summaryText: null,
      hasAiSummary: false,
      createdAt: DateTime.now(), // Will be overridden by database
      updatedAt: DateTime.now(), // Will be overridden by database
    );

    return await _repository.createStudyMaterial(studyMaterial);
  }
}
